# configuration example file (EXAMPLE.conf)

#------------------------------------------------------------------------------
# base options
#------------------------------------------------------------------------------

# user for rsync on the remote partner
SOURCE_RSYNC_USER=EXAMPLE

# user for ssh connection. Usually the same like SOURCE_RSYNC_USER
SOURCE_SSH_USER=EXAMPLE

# remote computer (client/source for backup)
SOURCE_SSH_SERVER=EXAMPLE.my.domain.com

# remote source folder to backup (fake module)
# The "/" at the end controls rsync's behavior. For details see rsync man page
SOURCE_FOLDER=Documents/

# Path to combine multiple sessions to one common base folder (optional, recommended)
#
# The parameter adds an additional layer in the backup path which is independent from the session
# usefull for mounting all single backup sessions of a user to a user specific share (e.g ../<user share>/Backups)
# Result path: <BASE_PATH>/backups/BACKUP_BASE_PATH/SOURCE_FOLDER/CCYY-MM-DD_hh-mm-ss/<folders and files>
#
# If not set the backups will use the session/conf file name (<BASE_PATH>/backups/<SESSION>/SOURCE_FOLDER/<backups>)
#
# default in the script is conf file name from start (e.g EXAMPLE) without extension
#BACKUP_BASE_PATH=MY-BACKUPS

# change in case to use a different file. rsync-exclude is default  (optional)
# Path for exclude files: <BASE_PATH>/conf/
#
# If the file does not exist the script logs a warning and omits the --exclude-from parameter
#
# default in the script is rsync-exclude
#SOURCE_EXCLUDE_FILE=rsync-exclude

#------------------------------------------------------------------------------
# ssh options 
#------------------------------------------------------------------------------

# ssh port for the source system (optional)
# 
# default in the script is ssh default port 22
#REMOTE_SSH_PORT=22

# controls if remote host needs to be in user known_hosts (optional)
# 1: yes, anything else: no
#
# default in the script is 1 
#STRICT_SSH=1

# ssh private key file (optional)
# defines the private key file for the session
#
# Path for private key files: <BASE_PATH>/.ssh/
#
# default in the script is id_rsa
#PRIVATE_KEY_FILE=id_rsa

#------------------------------------------------------------------------------
# Backup aging and permissions
#------------------------------------------------------------------------------

# min counts of backups to keep
# The last xx backups will not be removed regardlee of the age
#
# Used to keep at least xx backups. So if you are off for some time or a folder didn't change you want lose all backups.
# The script checks for the age of a folder, not the name. Unchanged folders keep there last modification date (-t is set).
#
# default in the script is 40
#BACKUP_MIN_COUNT=40

# min age in days for backups 
# no backups younger will be removed regardless how many we have
#
# also if the backups are older then BACKUP_MIN_AGE days they will not be removed if we have less then BACKUP_MIN_COUNT
# take care NOT to place own directories in the backup path. The script checks all directories there and so they would deleted according to the rules.
#
# default in the script is 30. Set to 0 for infinite.
#BACKUP_MIN_AGE=30

# change permissions
# Permissions will be changed for directories and files to the same mask during backup
# the mask uses rsync syntax
# 
# Allowed values 
# - Permission mask like Dugo-w,Dgo+r,Dgo+x,Fgo-w,Fgo+r,Fugo-x (default, recommended)
# - KEEP (keep original permissions)
#PERMISSIONS=Dgo-w,Dgo+r,Dgo+x,Fgo-w,Fgo+r,Fugo-x

#------------------------------------------------------------------------------
# really optional
#------------------------------------------------------------------------------

# change the owner of the backup
#
# Example: 20000:20000
# default in the script is KEEP (owner is the user who starts the backup. NOT the owner of the saved files!)
# for other options than KEEP the script needs to run as root because this option uses linux chown and not rsync options
# Option might conflict with backup aging. Handle with care.
#
# default in the script is KEEP
#BACKUP_OWNER=KEEP

