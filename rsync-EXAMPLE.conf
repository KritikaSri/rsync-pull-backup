# configuration example file

#------------------------------------------------------------------------------
# base options
#------------------------------------------------------------------------------

# user for rsync on the remote partner
SOURCE_RSYNC_USER=EXAMPLE

# user for ssh connection. Usually the same like SOURCE_RSYNC_USER
SOURCE_SSH_USER=EXAMPLE

# remote computer (client/source for backup)
SOURCE_SSH_SERVER=EXAMPLE.my.domain.com

# remote source folder to backup (fake module)
# take care: The "/" at the end controls rsync's behavior. For details see rsync man page
SOURCE_FOLDER=Documents/

# Path to combine multiple sessions to one common base folder  (optional/recommended)
# if empty the backups will be stored below the root path of the backup user (<root path>/SOURCE_FOLDER/<backups>)
# with this parameter you can add an additional layer which is independent from the session
# usefull for mounting read-only (!) all single backup sessions of a user with one mount point to a user specific share (e.g a user home directory/share)
# Path: <root path>/BACKUP_BASE_PATH/SOURCE_FOLDER/<backups>
#
# default in the script is the session name (e.g EXAMPLE)
#BACKUP_BASE_PATH=MY-BACKUPS

# change in case to use a different file. rsync-exclude is default  (optional)
# Path: <root path>/conf
#
# default in the script is rsync-exclude
#SOURCE_EXCLUDE_FILE=rsync-exclude

#------------------------------------------------------------------------------
# Cloud backup options 
#------------------------------------------------------------------------------

# Controls if a request will be placed in the cloud queue
#
# Allowed values: The queue folder where to place the request. Default is empty = no cloud backup
#CLOUD_ARCHIVE_QUEUE=AWS-ALL

# Name of the request file
#
# A cloud backup configuration file name (i.e. AWS-EXAMPLE.conf)
#CLOUD_ARCHIVE_REQUEST_FILE=AWS-EXAMPLE.conf

#------------------------------------------------------------------------------
# ssh options 
#------------------------------------------------------------------------------

# ssh port for the source system (optional)
# 
# default in the script is ssh default port 22
#REMOTE_SSH_PORT=22

# controls if remote host needs to be in known hosts (optional)
# 1: yes, anything else: no
#
# default in the script is 1 
#STRICT_SSH=1

# ssh private key file (optional)
# defines the private key file for the session
#
# default in the script is id_rsa
#PRIVATE_KEY_FILE=id_rsa

#------------------------------------------------------------------------------
# Backup aging and permissions
#------------------------------------------------------------------------------

# min counts of backups to keep
# The last xx backups will not be removed regardlee of the age
# (also if backups are older then BACKUP_MIN_AGE will stay as long there are less then BACKUP_MIN_COUNT)
#
# default in the script is 40
#BACKUP_MIN_COUNT=40

# min age in days for backups 
# no backups younger will be removed regardless how many we have
#
# also if the backups are older then BACKUP_MIN_AGE days they will not be removed if we have less then BACKUP_MIN_COUNT
# take care NOT to place own directories in the backup path. The script checks all directories there and so they would deleted according to the rules.
#
# default in the script is 30. Set to 0 for infinite.
#BACKUP_MIN_AGE=30

# change permissions
# Permissions will be changed for directories and files to the same mask
# the mask uses rsync syntax
# 
# Allowed values 
# - Permission mask like Dugo-w,Dgo+r,Dgo+x,Fgo-w,Fgo+r,Fugo-x (default, recommended)
# - KEEP (keep original permissions)
#PERMISSIONS=Dgo-w,Dgo+r,Dgo+x,Fgo-w,Fgo+r,Fugo-x

#------------------------------------------------------------------------------
# really optional
#------------------------------------------------------------------------------

# change the owner of the backup to preserve from changes
#
# Example: 20000:20000
# default in the script is KEEP (owner is the user who starts the backup. NOT the owner of the saved files)
# for other options than KEEP the script needs to run as root because the script uses linux chown and not rsync options
#BACKUP_OWNER=KEEP

